apiVersion: v1
kind: List
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
    generation: 2
    labels:
      app: hello-blue-whale
    name: hello-blue-whale
    namespace: default
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: hello-blue-whale
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2025-08-19T22:53:45-05:00"
        creationTimestamp: null
        labels:
          app: hello-blue-whale
      spec:
        containers:
        - image: vamsijakkula/hello-blue-whale:v1
          imagePullPolicy: IfNotPresent
          name: hello-blue-whale
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          resources:
            requests:
              cpu: "5m"
              memory: "25Mi"
            limits:
              cpu: "50m"
              memory: "100Mi"
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: hello-blue-whale
    name: hello-blue-whale
    namespace: default
  spec:
    clusterIP: 10.96.217.37
    clusterIPs:
    - 10.96.217.37
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: hello-blue-whale
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: hello-blue-whale-allow-ingress-controller
    namespace: default # Replace with the namespace of your application pods
  spec:
    podSelector:
      matchLabels:
        app: hello-blue-whale # Label of the application pods to which ingress is allowed
    policyTypes:
      - Ingress
    ingress:
      - from:
          - podSelector:
              matchLabels:
                app.kubernetes.io/name: ingress-nginx # Label of your Ingress Controller pod
            namespaceSelector:
              matchLabels:
                kubernetes.io/metadata.name: ingress-nginx # Namespace of your Ingress Controller
        ports:
          - protocol: TCP
            port: 80 # Port on which your application pods listen for HTTP traffic
          - protocol: TCP
            port: 443 # Port on which your application pods listen for HTTPS traffic
